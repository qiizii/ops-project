@use './variables.scss' as v;

// 清除浮动
@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}
// 使用方法：@include clearfix;

// 文本溢出显示省略号
@mixin text-ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
// 使用方法：@include text-ellipsis;

// 多行文本溢出
@mixin multi-line-ellipsis($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}
// 使用方法：@include multi-line-ellipsis(2);

// flex布局
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}
// 使用方法：@include flex(row, center, center);

// 定位居中
@mixin position-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
// 使用方法：@include position-center;

// 响应式媒体查询
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: v.$screen-xs) {
      @content;
    }
  } @else if $breakpoint == sm {
    @media (min-width: v.$screen-sm) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (min-width: v.$screen-md) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (min-width: v.$screen-lg) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (min-width: v.$screen-xl) {
      @content;
    }
  }
}
// 使用方法：@include respond-to(sm) { /* 样式 */ };

// 过渡动画
@mixin transition($property: all, $duration: 0.3s, $timing: ease-in-out) {
  transition: $property $duration $timing;
}
// 使用方法：@include transition(all, 0.5s);

// 阴影效果
@mixin box-shadow($level: 1) {
  @if $level == 1 {
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  } @else if $level == 2 {
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  } @else if $level == 3 {
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
  } @else if $level == 4 {
    box-shadow: 0 16px 24px rgba(0, 0, 0, 0.1);
  }
}
// 使用方法：@include box-shadow(2);